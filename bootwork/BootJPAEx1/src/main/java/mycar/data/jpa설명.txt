/*
 Entity

**JPA에서는 엔티티는 테이블에 대응하는 하나의 클래스라고 생각하면 된다**

**spring-boot-starter-data-jpa** **의존성을 추가하고 @Entiy** **어노테이션을 붙이면 테이블과 자바 클래스가 매핑이 됩니다.**

**그래서 JPA에서 *'하나의 엔티티 타입을 생성한다'라는 의미는 '하나의 클래스를' 작성한다는 의미*가 됩니다.**

**엔티티라는 용어는 때로는 클래스를 의미하는 경우도 있고, 클래스에 의해 생성된 인스턴스를 의미하는 경우가 있습니다.**

**정확히 얘기 하자면, 엔티티클래스 와 엔티티인스턴스 혹은 엔티티객체라는 표현이 정확합니다.**

**@EntityScan**

**이 어노테이션으로 엔티티클래스를 스캔할곳을 지정하는데 사용합니다.**

**메인어플리케이션 패키지내에 엔티티클래스가 없는 경우 이 어노테이션을 사용해서 패키지밖에 존재하는 엔티티를 지정할수있습니다.**

**기본적으로 @EnableAutoConfiguration 어노테이션에의해서 지정한곳에서 엔티티를 스캔합니다.**

**@EnableJpaRepositories**

**@EnableJpaRepositories 어노테이션은 JpaRepository 에 대한 설정정보를 자동적으로 로딩하고 이 정보를 토대로 Repository 빈을 등록하는 역할을 합니다.**
 */